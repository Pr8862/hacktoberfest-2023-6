Given a sorted array arr containing n elements with possibly some duplicate, the task is to find the first and last occurrences of an element x in the given array.
Note: If the number x is not found in the array then return both the indices as -1.


Example 1:

Input:
n=9, x=5
arr[] = { 1, 3, 5, 5, 5, 5, 67, 123, 125 }
Output:  
2 5
Explanation: 
First occurrence of 5 is at index 2 and last occurrence of 5 is at index 5. 
Example 2:

Input:
n=9, x=7
arr[] = { 1, 3, 5, 5, 5, 5, 7, 123, 125 }
Output:  
6 6
Explanation: 
First and last occurrence of 7 is at index 6.




def find_first_occurrence(arr, n, x):
    left, right = 0, n - 1
    first_occurrence = -1

    while left <= right:
        mid = left + (right - left) // 2
        if arr[mid] == x:
            first_occurrence = mid
            right = mid - 1
        elif arr[mid] < x:
            left = mid + 1
        else:
            right = mid - 1

    return first_occurrence

def find_last_occurrence(arr, n, x):
    left, right = 0, n - 1
    last_occurrence = -1

    while left <= right:
        mid = left + (right - left) // 2
        if arr[mid] == x:
            last_occurrence = mid
            left = mid + 1
        elif arr[mid] < x:
            left = mid + 1
        else:
            right = mid - 1

    return last_occurrence

def find_occurrences(arr, n, x):
    first_occurrence = find_first_occurrence(arr, n, x)
    last_occurrence = find_last_occurrence(arr, n, x)
    return first_occurrence, last_occurrence

# Example usage:
arr = [1, 3, 5, 5, 5, 5, 67, 123, 125]
n = len(arr)
x = 5
first_occurrence, last_occurrence = find_occurrences(arr, n, x)
print("First Occurrence:", first_occurrence)
print("Last Occurrence:", last_occurrence)
